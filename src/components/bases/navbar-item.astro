---
import type { Link } from "@/lib/types";

type Props = {
  item: Link;
};
const currentPath = Astro.url.pathname;
const { item } = Astro.props;

function isActive(item: Link, currentPath: string) {
  const segment = currentPath.split("/")[2];
  return (
    (item.text === "Beranda" && currentPath === "/") ||
    (item.text === "Home" && currentPath === "/") ||
    (item.text === "Berita" &&
      segment !== undefined &&
      !Number.isNaN(Number(segment)) &&
      Number(segment) >= 1) ||
    (item.text === "Articles" &&
      segment !== undefined &&
      !Number.isNaN(Number(segment)) &&
      Number(segment) >= 1) ||
    (item.text !== "Articles" &&
      item.text !== "Berita" &&
      currentPath.split("/").includes(item.text.toLocaleLowerCase()))
  );
}

function formatHref(href: string) {
  return href === "/" ? "/" : `${href}/1`;
}
---

<li class="relative">
  <a
    href={formatHref(item.href)}
    aria-label={item.text}
    class:list={[
      "nav-financial-item relative px-4 py-2 rounded-md font-medium text-sm transition-all duration-200",
      "hover:bg-blue-50 hover:text-blue-700",
      "after:absolute after:bottom-0 after:left-1/2 after:transform after:-translate-x-1/2",
      "after:h-0.5 after:transition-all after:duration-300",
      isActive(item, currentPath)
        ? "text-blue-700 bg-blue-50 after:w-6 after:bg-blue-700"
        : "text-gray-600 after:w-0 after:bg-transparent",
    ]}
  >
    {item.text}
  </a>
</li>
